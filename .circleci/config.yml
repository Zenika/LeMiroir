version: 2.1

executors:
  node_executor:
    docker:
      - image: circleci/node:12
    working_directory: /home/circleci/app
  go_executor:
    docker:
      - image: golang:1.16-rc
    working_directory: /go/app
  std_executor:
    docker:
      - image: circleci/buildpack-deps:stable-curl
    working_directory: /tmp/app
  gcloud_executor:
    docker:
      - image: google/cloud-sdk:latest

jobs:
  build_backoffice:
    executor: node_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - marcel-backoffice-deps-{{ checksum "backoffice/package.json" }}
      - run:
          command: yarn
          working_directory: backoffice
      - save_cache:
          paths:
            - backoffice/node_modules
          key: marcel-backoffice-deps-{{ checksum "backoffice/package.json" }}
      - run:
          command: yarn build
          working_directory: backoffice
      - persist_to_workspace:
          root: .
          paths:
            - backoffice/build

  build_frontend:
    executor: node_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - marcel-frontend-deps-{{ checksum "frontend/package.json" }}
      - run:
          command: yarn
          working_directory: frontend
      - save_cache:
          paths:
            - frontend/node_modules
          key: marcel-frontend-deps-{{ checksum "frontend/package.json" }}
      - run:
          command: yarn build
          working_directory: frontend
      - persist_to_workspace:
          root: .
          paths:
            - frontend/build

  build_marcel:
    executor: go_executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: go mod download
      - run: go test -mod=readonly .
      - run: "CGO_ENABLED=0 go build -mod=readonly -trimpath -tags \"osusergo netgo\" -ldflags \"-extldflags \\\"-static\\\" -X github.com/allez-chauffe/marcel/pkg/version.version=$CIRCLE_BRANCH -X github.com/allez-chauffe/marcel/pkg/version.revision=$CIRCLE_SHA1\" -o marcel"
      - persist_to_workspace:
          root: .
          paths:
            - Dockerfile
            - marcel

  build_marcel_noembed:
    executor: go_executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: go mod download
      - run: go test -mod=readonly .
      - run: "CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -mod=readonly -trimpath -tags \"osusergo netgo noembed\" -ldflags \"-extldflags \\\"-static\\\" -X github.com/allez-chauffe/marcel/pkg/version.version=$CIRCLE_TAG -X github.com/allez-chauffe/marcel/pkg/version.revision=$CIRCLE_SHA1\" -o marcel_linux_amd64"
      - run: "CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -mod=readonly -trimpath -tags \"osusergo netgo noembed\" -ldflags \"-H=windowsgui -extldflags \\\"-static\\\" -X github.com/allez-chauffe/marcel/pkg/version.version=$CIRCLE_TAG -X github.com/allez-chauffe/marcel/pkg/version.revision=$CIRCLE_SHA1\" -o marcel_windows_amd64.exe"
      - run: "CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -mod=readonly -trimpath -tags \"noembed\" -ldflags \"-s -extldflags \\\"-sectcreate __TEXT __info_plist Info.plist\\\" -X github.com/allez-chauffe/marcel/pkg/version.version=$CIRCLE_TAG -X github.com/allez-chauffe/marcel/pkg/version.revision=$CIRCLE_SHA1\" -o marcel_darwin_amd64"
      - persist_to_workspace:
          root: .
          paths:
            - Docker
            - marcel_linux_amd64
            - marcel_windows_amd64.exe
            - marcel_darwin_amd64

  docker_build_marcel:
    executor: gcloud_executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run: ./scripts/docker_build.sh eu.gcr.io/zen-dashboard/marcel

  archive_backoffice:
    executor: std_executor
    steps:
      - attach_workspace:
          at: .
      - run:
          command: tar czf ../marcel-backoffice.tgz *
          working_directory: backoffice/build
      - persist_to_workspace:
          root: .
          paths:
            - backoffice/marcel-backoffice.tgz

  archive_frontend:
    executor: std_executor
    steps:
      - attach_workspace:
          at: .
      - run:
          command: tar czf ../marcel-frontend.tgz *
          working_directory: frontend/build
      - persist_to_workspace:
          root: .
          paths:
            - frontend/marcel-frontend.tgz

  archive_marcel:
    executor: std_executor
    steps:
      - attach_workspace:
          at: .
      - run: tar czf marcel_linux_amd64.tgz marcel_linux_amd64
      - run: tar czf marcel_windows_amd64.tgz marcel_windows_amd64.exe
      - run: tar czf marcel_darwin_amd64.tgz marcel_darwin_amd64
      - persist_to_workspace:
          root: .
          paths:
            - marcel_linux_amd64.tgz
            - marcel_windows_amd64.tgz
            - marcel_darwin_amd64.tgz

  deploy_integration:
    executor: gcloud_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - plugins-package-{{ .Revision }}
      - run: ./scripts/install.sh
      - run:
          command: rm -rf ${HOME}/.ssh
          when: always
      - run:
          command: rm -f ${HOME}/gcloud-service-key.json
          when: always

  publish_github_release:
    executor: go_executor
    steps:
      - attach_workspace:
          at: .
      - run: go get github.com/tcnksm/ghr
      - run: mkdir assets
      - run: mv backoffice/marcel-backoffice.tgz assets/marcel-backoffice-${CIRCLE_TAG}.tgz
      - run: mv frontend/marcel-frontend.tgz assets/marcel-frontend-${CIRCLE_TAG}.tgz
      - run: mv marcel_linux_amd64.tgz assets/marcel_linux_amd64-${CIRCLE_TAG}.tgz
      - run: mv marcel_darwin_amd64.tgz assets/marcel_darwin_amd64-${CIRCLE_TAG}.tgz
      - run: mv marcel_windows_amd64.tgz assets/marcel_windows_amd64-${CIRCLE_TAG}.tgz
      - run: ghr -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -n "marcel ${CIRCLE_TAG}" ${CIRCLE_TAG} assets

filters-all: &filters-all
  tags:
    only: /.*/
filters-master: &filters-master
  branches:
    only:
      - master
filters-tag: &filters-tag
  branches:
    ignore: /.*/
  tags:
    only: /.*/
filters-master_tag: &filters-master-tag
  branches:
    only:
      - master
  tags:
    only: /.*/

workflows:
  version: 2
  build:
    jobs:
      - build_backoffice:
          filters: *filters-all
      - build_frontend:
          filters: *filters-all
      - build_marcel:
          requires:
            - build_backoffice
            - build_frontend
      - build_marcel_noembed:
          filters: *filters-tag
      - docker_build_marcel:
          filters: *filters-master-tag
          requires:
            - build_marcel
      - archive_backoffice:
          filters: *filters-tag
          requires:
            - build_backoffice
      - archive_frontend:
          filters: *filters-tag
          requires:
            - build_frontend
      - archive_marcel:
          filters: *filters-tag
          requires:
            - build_marcel_noembed
      - deploy_integration:
          filters: *filters-master
          requires:
            - docker_build_marcel
      - publish_github_release:
          filters: *filters-tag
          requires:
            - archive_backoffice
            - archive_frontend
            - archive_marcel
