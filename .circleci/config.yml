version: 2.1

executors:
  node_executor:
    docker:
      - image: circleci/node:12
    working_directory: /home/circleci/app
  go_executor:
    docker:
      - image: circleci/golang:1.13
    working_directory: /go/app
  std_executor:
    docker:
      - image: circleci/buildpack-deps:stable-curl
    working_directory: /tmp/app
  gcloud_executor:
    docker:
      - image: google/cloud-sdk:latest

jobs:
  debug_node:
    executor: node_executor
    steps:
      - run: node --version
      - run: yarn --version

  debug_go:
    executor: go_executor
    steps:
      - run: go version

  build_backoffice:
    executor: node_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - marcel-backoffice-deps-{{ checksum "backoffice/package.json" }}
      - run:
          command: yarn
          working_directory: backoffice
      - save_cache:
          paths:
            - backoffice/node_modules
          key: marcel-backoffice-deps-{{ checksum "backoffice/package.json" }}
      - run:
          command: yarn build
          working_directory: backoffice
      - persist_to_workspace:
          root: .
          paths:
            - backoffice/build

  build_frontend:
    executor: node_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - marcel-frontend-deps-{{ checksum "frontend/package.json" }}
      - run:
          command: yarn
          working_directory: frontend
      - save_cache:
          paths:
            - frontend/node_modules
          key: marcel-frontend-deps-{{ checksum "frontend/package.json" }}
      - run:
          command: yarn build
          working_directory: frontend
      - persist_to_workspace:
          root: .
          paths:
            - frontend/build

  build_marcel:
    executor: go_executor
    steps:
      - checkout
      - restore_cache:
          key: marcel-go-deps-{{ checksum "go.mod" }}
      - run: go mod download
      - run: go get -u github.com/gobuffalo/packr/packr
      - save_cache:
          key: marcel-go-deps-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod
      - attach_workspace:
          at: .
      - run: go test .
      - run: packr
      - run: CGO_ENABLED=0 go build -ldflags '-extldflags "-static" -X github.com/Zenika/marcel/version.Version=${CIRCLE_TAG:-$CIRCLE_BRANCH} -X github.com/Zenika/marcel/version.Revision=$CIRCLE_SHA1' -tags 'osusergo netgo' -o marcel
      - persist_to_workspace:
          root: .
          paths:
            - Dockerfile
            - marcel

  docker_build_marcel:
    executor: std_executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run: ${CIRCLE_WORKING_DIRECTORY}/scripts/docker_build.sh zenika/marcel

  archive_backoffice:
    executor: std_executor
    steps:
      - attach_workspace:
          at: .
      - run:
          command: tar czf ../marcel-backoffice.tgz *
          working_directory: backoffice/build
      - persist_to_workspace:
          root: .
          paths:
            - backoffice/marcel-backoffice.tgz

  deploy_integration:
    executor: gcloud_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - plugins-package-{{ .Revision }}
      - run: ./scripts/install.sh
      - run:
          command: rm -rf ${HOME}/.ssh
          when: always
      - run:
          command: rm -f ${HOME}/gcloud-service-key.json
          when: always

  publish_github_release:
    executor: go_executor
    steps:
      - attach_workspace:
          at: .
      - run: go get github.com/tcnksm/ghr
      - run: ghr -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_TAG} backoffice/marcel-backoffice.tgz

filters-all: &filters-all
  tags:
    only: /.*/
filters-master: &filters-master
  branches:
    only:
      - master
filters-tag: &filters-tag
  branches:
    ignore: /.*/
  tags:
    only: /.*/
filters-master_tag: &filters-master-tag
  branches:
    only:
      - master
  tags:
    only: /.*/

workflows:
  version: 2
  build:
    jobs:
      - debug_node:
          filters: *filters-all
      - debug_go:
          filters: *filters-all
      - build_backoffice:
          filters: *filters-all
      - build_frontend:
          filters: *filters-all
      - build_marcel:
          filters: *filters-all
          requires:
            - build_backoffice
            - build_frontend
      - docker_build_marcel:
          filters: *filters-master-tag
          requires:
            - build_marcel
      - archive_backoffice:
          filters: *filters-tag
          requires:
            - build_backoffice
      - deploy_integration:
          filters: *filters-master
          requires:
            - docker_build_marcel
      - publish_github_release:
          filters: *filters-tag
          requires:
            - archive_backoffice
