defaults: &defaults
  working_directory: /tmp
  docker:
    - image: buildpack-deps:xenial

version: 2
jobs:
  debug_node:
    docker:
      - image: circleci/node:latest
    steps:
      - run: node --version
      - run: yarn --version

  debug_go:
    docker:
      - image: circleci/golang:1.12
    steps:
      - run: go version

  build_backend:
    <<: *defaults
    working_directory: /go/app
    docker:
      - image: circleci/golang:1.12
    steps:
      - checkout
      - restore_cache:
          key: backend-deps-{{ checksum "backend/go.mod" }}
      - run:
          command: go mod download
          working_directory: backend
      - save_cache:
          key: backend-deps-{{ checksum "backend/go.mod" }}
          paths:
            - /go/pkg/mod
      - run:
          command: go test .
          working_directory: backend
      - run:
          command: CGO_ENABLED=0 go build -a -installsuffix cgo -o marcel .
          working_directory: backend
      - persist_to_workspace:
          root: .
          paths:
            - backend/Dockerfile
            - backend/marcel

  build_backoffice:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys:
          - backoffice-dependencies-{{ checksum "back-office/package.json" }}
          - backoffice-dependencies-
      - run:
          command: yarn
          working_directory: back-office
      - save_cache:
          paths:
            - back-office/node_modules
          key: backoffice-dependencies-{{ checksum "back-office/package.json" }}
      - run:
          command: yarn build
          working_directory: back-office
      - save_cache:
          paths:
            - back-office/build
          key: backoffice-build-{{ .Revision }}

  build_frontend:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys:
          - frontend-dependencies-{{ checksum "frontend/package.json" }}
          - frontend-dependencies-
      - run:
          command: yarn
          working_directory: frontend
      - save_cache:
          paths:
            - frontend/node_modules
          key: frontend-dependencies-{{ checksum "frontend/package.json" }}
      - run:
          command: yarn build
          working_directory: frontend
      - save_cache:
          paths:
            - frontend/build
          key: frontend-build-{{ .Revision }}

  package_plugins:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: tar -czf plugins.tar.gz plugins
      - save_cache:
          paths:
            - plugins.tar.gz
          key: plugins-package-{{ .Revision }}

  backend_docker_build:
    <<: *defaults
    working_directory: /tmp/backend
    docker:
      - image: circleci/buildpack-deps:xenial-scm
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp
      - run: docker build -t zenika/marcel-backend:dev .
      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      - run: docker push zenika/marcel-backend:dev

  backoffice_docker_build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - backoffice-build-{{ .Revision }}
      - run:
          command: docker build -t zenika/marcel-backoffice:dev .
          working_directory: back-office
      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      - run: docker push zenika/marcel-backoffice:dev

  frontend_docker_build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - frontend-build-{{ .Revision }}
      - run:
          command: docker build -t zenika/marcel-frontend:dev .
          working_directory: frontend
      - run: docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
      - run: docker push zenika/marcel-frontend:dev


  deploy_integration:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - plugins-package-{{ .Revision }}
      - run: echo $INTEGRATION_SERVER_KEY | sed s/retourligne/\\n/g > integration_key.pem
      - run: chmod 400 integration_key.pem
      - run: scp -o StrictHostKeyChecking=no -i integration_key.pem plugins.tar.gz docker-compose.yml ubuntu@35.158.222.144:~/
      - run: ssh -o StrictHostKeyChecking=no -i integration_key.pem ubuntu@35.158.222.144 "./MARCEL/deploy.sh"
      - run: rm -f integration_key.pem

workflows:
  version: 2
  build:
    jobs:
       - debug_node
       - debug_go
       - build_backend
       - build_backoffice
       - build_frontend
       - package_plugins:
          requires:
            - build_backend
            - build_backoffice
            - build_frontend
       - backend_docker_build:
          requires:
            - package_plugins
       - backoffice_docker_build:
          requires:
            - package_plugins
       - frontend_docker_build:
          requires:
            - package_plugins
       - deploy_integration:
          requires:
            - backend_docker_build
            - backoffice_docker_build
            - frontend_docker_build
          filters:
            branches:
              only:
                - master
